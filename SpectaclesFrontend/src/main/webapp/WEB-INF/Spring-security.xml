<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:webflow-config="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd  
      http://www.springframework.org/schema/security 
       http://www.springframework.org/schema/security/spring-security.xsd  
        http://www.springframework.org/schema/webflow-config  
       http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">

	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="true" />
		<security:intercept-url pattern="/"
			access="permitAll" />
		<security:intercept-url pattern="/shop"
			access="permitAll" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/register"
			access="permitAll" />
		<security:intercept-url pattern="/addUsers"
			access="permitAll" />
			<security:intercept-url pattern="/cart"
			access="permitAll" />
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/products" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/category" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/addCategory" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/categories" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/viewcategory" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/deletecategory/{id}" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/editcategory/{id}" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/addProducts" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/productss" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/viewadminproduct" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/editproducts/{id}" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/deleteproducts/{id}" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/supplier" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/addSupplier" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/suppliers" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/viewsupplier" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/deletesupplier/{id}" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/admin/editsupplier/{id}" access="hasROLE(ROLE_ADMIN)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/add/To/cart/{pid}" access="hasROLE(ROLE_USER)" /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/remove/cartitems/{cartitemsid}" access="hasROLE(ROLE_USER)" /> -->
	

		<security:form-login login-page="/login"
			authentication-failure-url="/login?error"
			login-processing-url="/j_spring_security_check"
			default-target-url="/" username-parameter="j_username"
			password-parameter="j_password" />
		<security:logout logout-success-url="/login?logout"
			logout-url="/j_spring_security_logout" />
	</security:http>
	<security:authentication-manager>

		<security:authentication-provider>

			<security:jdbc-user-service
				data-source-ref="dataSource"
				authorities-by-username-query="SELECT usersName, roleName FROM Authentication WHERE usersName =?"
				users-by-username-query="SELECT UsersEmailId, UsersPassword, 'true' as enabled from Users where UsersEmailId=? limit 1" />

		</security:authentication-provider>
	</security:authentication-manager>
</beans>